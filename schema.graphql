type SpecVersion @entity {
        id: ID! #specVersion
        blockHeight: BigInt!
}
      
type Block @entity {
        id: ID!
        blockHeight: BigInt!
        timestamp: BigInt!
        cindex: Int!
        phase: String!
        nextPhaseTimestamp: BigInt!
        reputationLifetime: Int!
}

type PhaseChangedTo @entity {
        id: ID!
        blockHeight: BigInt! @index
        timestamp: BigInt! @index
        arg0: String!
}

type SchedulePushed @entity {
        id: ID!
        blockHeight: BigInt! @index
        timestamp: BigInt! @index

}

type ParticipantRegistered @entity {
        id: ID!
        blockHeight: BigInt! @index
        timestamp: BigInt! @index
        arg0: String! @index
        arg1: String!
        arg2: String! @index
}

type EndorsedParticipant @entity {
        id: ID!
        blockHeight: BigInt! @index
        timestamp: BigInt! @index
        arg0: String! @index
        arg1: String! @index
        arg2: String! @index
}

type AttestationsRegistered @entity {
        id: ID!
        blockHeight: BigInt! @index
        timestamp: BigInt! @index
        arg0: String! @index
        arg1: String!
        arg2: String!
        arg3: String! @index
}

type RewardsIssued @entity {
        id: ID!
        blockHeight: BigInt! @index
        timestamp: BigInt! @index
        arg0: String! @index
        arg1: String!
        arg2: String!
}

type InactivityTimeoutUpdated @entity {
        id: ID!
        blockHeight: BigInt! @index
        timestamp: BigInt! @index
        arg0: String!
}

type BootstrapperTicketsUpdated @entity {
        id: ID!
        blockHeight: BigInt! @index
        timestamp: BigInt! @index
        arg0: String!
}

type ReputableTicketsUpdated @entity {
        id: ID!
        blockHeight: BigInt! @index
        timestamp: BigInt! @index
        arg0: String!
}

type ReputationLifetimeUpdated @entity {
        id: ID!
        blockHeight: BigInt! @index
        timestamp: BigInt! @index
        arg0: String!
}

type MeetupTimeOffsetUpdated @entity {
        id: ID!
        blockHeight: BigInt! @index
        timestamp: BigInt! @index
        arg0: String!
}

type TimeToleranceUpdated @entity {
        id: ID!
        blockHeight: BigInt! @index
        timestamp: BigInt! @index
        arg0: String!
}

type LocationToleranceUpdated @entity {
        id: ID!
        blockHeight: BigInt! @index
        timestamp: BigInt! @index
        arg0: String!
}

type HistoryPurged @entity {
        id: ID!
        blockHeight: BigInt! @index
        timestamp: BigInt! @index
        arg0: String! @index
        arg1: String!
}

type NoReward @entity {
        id: ID!
        blockHeight: BigInt! @index
        timestamp: BigInt! @index
        arg0: String! @index
        arg1: String!
        arg2: String!
        arg3: String! @index
        arg4: String!
}

type InactivityCounterUpdated @entity {
        id: ID!
        blockHeight: BigInt! @index
        timestamp: BigInt! @index
        arg0: String! @index
        arg1: String!
}

type MeetupEvaluated @entity {
        id: ID!
        blockHeight: BigInt! @index
        timestamp: BigInt! @index
        arg0: String! @index
        arg1: String!
        arg2: String!
}

type CommunityRegistered @entity {
        id: ID!
        blockHeight: BigInt! @index
        timestamp: BigInt! @index
        arg0: String! @index
}

type MetadataUpdated @entity {
        id: ID!
        blockHeight: BigInt! @index
        timestamp: BigInt! @index
        arg0: String! @index
}

type NominalIncomeUpdated @entity {
        id: ID!
        blockHeight: BigInt! @index
        timestamp: BigInt! @index
        arg0: String! @index
        arg1: String!
}

type DemurrageUpdated @entity {
        id: ID!
        blockHeight: BigInt! @index
        timestamp: BigInt! @index
        arg0: String! @index
        arg1: String!
}

type LocationAdded @entity {
        id: ID!
        blockHeight: BigInt! @index
        timestamp: BigInt! @index
        arg0: String! @index
        arg1: String!
}

type LocationRemoved @entity {
        id: ID!
        blockHeight: BigInt! @index
        timestamp: BigInt! @index
        arg0: String! @index
        arg1: String!
}

type MinSolarTripTimeSUpdated @entity {
        id: ID!
        blockHeight: BigInt! @index
        timestamp: BigInt! @index
        arg0: String!
}

type MaxSpeedMpsUpdated @entity {
        id: ID!
        blockHeight: BigInt! @index
        timestamp: BigInt! @index
        arg0: String!
}

type CommunityPurged @entity {
        id: ID!
        blockHeight: BigInt! @index
        timestamp: BigInt! @index
        arg0: String! @index
}

type Endowed @entity {
        id: ID!
        blockHeight: BigInt! @index
        timestamp: BigInt! @index
        arg0: String! @index
        arg1: String! @index
        arg2: Float!
}

type Transferred @entity {
        id: ID!
        blockHeight: BigInt! @index
        timestamp: BigInt! @index
        arg0: String! @index
        arg1: String! @index
        arg2: String! @index
        arg3: Float!
}

type Issued @entity {
        id: ID!
        blockHeight: BigInt! @index
        timestamp: BigInt! @index
        arg0: String! @index
        arg1: String! @index
        arg2: Float!
}

type FeeConversionFactorUpdated @entity {
        id: ID!
        blockHeight: BigInt! @index
        timestamp: BigInt! @index
        arg0: String!
}

type BusinessCreated @entity {
        id: ID!
        blockHeight: BigInt! @index
        timestamp: BigInt! @index
        arg0: String! @index
        arg1: String! @index
}

type BusinessUpdated @entity {
        id: ID!
        blockHeight: BigInt! @index
        timestamp: BigInt! @index
        arg0: String! @index
        arg1: String! @index
}

type BusinessDeleted @entity {
        id: ID!
        blockHeight: BigInt! @index
        timestamp: BigInt! @index
        arg0: String! @index
        arg1: String! @index
}

type OfferingCreated @entity {
        id: ID!
        blockHeight: BigInt! @index
        timestamp: BigInt! @index
        arg0: String! @index
        arg1: String! @index
        arg2: String!
}

type OfferingUpdated @entity {
        id: ID!
        blockHeight: BigInt! @index
        timestamp: BigInt! @index
        arg0: String! @index
        arg1: String! @index
        arg2: String!
}

type OfferingDeleted @entity {
        id: ID!
        blockHeight: BigInt! @index
        timestamp: BigInt! @index
        arg0: String! @index
        arg1: String! @index
        arg2: String!
}